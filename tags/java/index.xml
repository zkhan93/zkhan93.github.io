<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>java on Zeeshan Khan</title><link>https://zkhan.in/tags/java/</link><description>Recent content in java on Zeeshan Khan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 03 Feb 2015 10:14:51 +0000</lastBuildDate><atom:link href="https://zkhan.in/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>How To Scan Input In Java</title><link>https://zkhan.in/posts/java/how-to-scan-input-in-java/</link><pubDate>Tue, 03 Feb 2015 10:14:51 +0000</pubDate><guid>https://zkhan.in/posts/java/how-to-scan-input-in-java/</guid><description>The best way to scan input in java includes the use of BufferedReader class, another method uses Scanner class but is slower, so here we will prefer BufferedReader.
The following code demonstrate the use of BufferedReader for scanning input of different type.
// file ScanInput.java import java.io.*; public class ScanInput{ public static void main(String args[]) throws IOException{ BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); System.out.print(&amp;#34;Enter a String: &amp;#34;); String msg=br.</description></item><item><title>How To Run a Java Program</title><link>https://zkhan.in/posts/java/how-to-run-java-program/</link><pubDate>Sat, 24 Jan 2015 11:37:21 +0000</pubDate><guid>https://zkhan.in/posts/java/how-to-run-java-program/</guid><description>To run a java program you must have one, so lets have a sample code which prints &amp;ldquo;Hello world!!&amp;rdquo; to console.
Source Code If you have source code ready then ignore else create a new file Hello.java and copy the below code in it and save it.
Source code
// file Hello.java import java.io.*; class Hello{ public static void main(String args[]){ System.out.println(&amp;#34;Hello World!!&amp;#34;); } } now you have your source code ready,</description></item><item><title>Client Server in Java</title><link>https://zkhan.in/posts/java/client-server-in-java/</link><pubDate>Wed, 21 Jan 2015 00:42:53 +0000</pubDate><guid>https://zkhan.in/posts/java/client-server-in-java/</guid><description>&lt;p>The following program demonstrate how we can implement simple client server architecture in java
Start &lt;code>Server.java&lt;/code> in a terminal/command prompt then open another command prompt/terminal and start &lt;code>Client.java&lt;/code> in it
Server can handle new Clients on disconnection of previous one.&lt;/p></description></item><item><title>ArrayList in java</title><link>https://zkhan.in/posts/java/arraylist-in-java/</link><pubDate>Thu, 08 Jan 2015 06:35:36 +0000</pubDate><guid>https://zkhan.in/posts/java/arraylist-in-java/</guid><description>ArrayList is a collection of data items that grows and shrinks depending on the number of data items present in it, you can think it as a dynamic array or a link lists in C, whose size increases when we insert a data and decreases as delete some data from it.
To insert a data item we use add() method and to delete we use remove() method as demonstrated below in line 13 and 20 respectively.</description></item><item><title>Add Two Integers in Java</title><link>https://zkhan.in/posts/java/add-two-numbers-in-java/</link><pubDate>Sun, 28 Dec 2014 08:04:04 +0000</pubDate><guid>https://zkhan.in/posts/java/add-two-numbers-in-java/</guid><description>Following program will add two Integer numbers for you.
// file Addition.java import java.io.*; class Addition{ public static void main(String args[]) throws IOException{ int a,b; BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); System.out.println(&amp;#34;Enter first integer&amp;#34;); a=Integer.parseInt(br.readLine()); System.out.println(&amp;#34;Enter second integer&amp;#34;); b=Integer.parseInt(br.readLine()); System.out.println(&amp;#34;Sum of two integers is: &amp;#34;+(a+b)); } } To run the above code navigate to the source code folder from cmd(Windows) or terminal(Linux) then type the following code to compile javac &amp;lt;filename&amp;gt;.</description></item></channel></rss>