<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>c stack simple pointers on Zeeshan Khan</title><link>https://zkhan.in/tags/c-stack-simple-pointers/</link><description>Recent content in c stack simple pointers on Zeeshan Khan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Dec 2015 09:00:00 +0000</lastBuildDate><atom:link href="https://zkhan.in/tags/c-stack-simple-pointers/index.xml" rel="self" type="application/rss+xml"/><item><title>Stack Implementation in C</title><link>https://zkhan.in/posts/draft/dynamic-stack-in-c/</link><pubDate>Tue, 22 Dec 2015 09:00:00 +0000</pubDate><guid>https://zkhan.in/posts/draft/dynamic-stack-in-c/</guid><description>Typically stacks are like arrays, the difference is in a stack addition and deletion operations are performed from one end, this end is called top.
Let&amp;rsquo;s have a look at stack terminology
###Top A pointer to top most item is called top of the stack, all operations are performed on top of the stack.
###Push Pushing a item into stack means inserting a new item to the top of stack.</description></item></channel></rss>