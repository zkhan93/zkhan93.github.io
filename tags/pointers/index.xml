<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>pointers on Zeeshan Khan</title><link>https://zkhan.in/tags/pointers/</link><description>Recent content in pointers on Zeeshan Khan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Jan 2015 02:11:00 +0000</lastBuildDate><atom:link href="https://zkhan.in/tags/pointers/index.xml" rel="self" type="application/rss+xml"/><item><title>File Handling in C</title><link>https://zkhan.in/posts/c/file-hadling-in-c/</link><pubDate>Sat, 03 Jan 2015 02:11:00 +0000</pubDate><guid>https://zkhan.in/posts/c/file-hadling-in-c/</guid><description>&lt;p>The following program demonstrate how we to perform read and write operations on files,&lt;/p>
&lt;p>We can create and open a file &lt;code>w+&lt;/code> (write plus) mode, this will open a file if it exists otherwise create a new file and open it in write mode&lt;/p></description></item><item><title>Pointers in C</title><link>https://zkhan.in/posts/c/pointers-in-c/</link><pubDate>Fri, 02 Jan 2015 07:39:00 +0000</pubDate><guid>https://zkhan.in/posts/c/pointers-in-c/</guid><description>Pointers are variables that stores the reference (address) of a data value, datatype of pointers represent what kind of values they can hold reference of, however, a pointer of type void can hold reference of any datatype, but explicitly type casting is required to use them.
The code below will demonstrate how we can use pointers in C {% highlight c linenos %}
include&amp;lt;stdio.h&amp;gt; int main(){ int *pnum, num; printf(&amp;ldquo;Enter a number\n&amp;rdquo;); scanf(&amp;quot;%d&amp;quot;, &amp;amp;num); pnum = # // now you can modify the value from pnum as well as num.</description></item></channel></rss>